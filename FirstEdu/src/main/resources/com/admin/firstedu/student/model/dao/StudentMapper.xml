<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="com.admin.firstedu.student.model.dao.StudentMapper">

	<!-- resultMap -->
	<!-- TBL_STUDENT DTO -->
	<resultMap id="studentResultMap" type="StudentDTO">
		<id column="STUDENT_NO" property="no"/>
		<result column="STUDENT_NAME" property="studentName"/>
		<result column="STUDENT_PHONE" property="studentPhone"/>
		<result column="PARENTS_NAME" property="parentsName"/>
		<result column="PARENTS_PHONE" property="parentsPhone"/>
		<result column="GENDER" property="gender"/>
		<result column="SCHOOL" property="school"/>
		<result column="ADDRESS" property="address"/>
		<result column="BIRTH" property="birth"/>
		<result column="REGISTRATION_DATE" property="registrationDate"/>
		<result column="QUIT_DATE" property="quitDate"/>
		<result column="STATUS" property="status"/>
		<result column="GRADE_CODE" property="gradeCode"/>
	</resultMap>
	
	<!-- 학년 테이블 DTO -->
	<resultMap id="gradeResultMap" type="GradeDTO">
		<id column="GRADE_CODE" property="code"/>
		<result column="GRADE_NAME" property="name"/>
	</resultMap>
	
	<!-- 재원생 목록 조회용 DTO -->
	<resultMap id="studentRegistListResultMap" type="StudentRegistListDTO">
		<id column="STUDENT_NO" property="no"/>
		<result column="STUDENT_NAME" property="name"/>
		<result column="SCHOOL" property="school"/>
		<result column="GRADE_NAME" property="grade"/>
		<result column="STUDENT_PHONE" property="studentPhone"/>
		<result column="PARENTS_PHONE" property="parentsPhone"/>
		<result column="REGISTRATION_DATE" property="registrationDate"/>
	</resultMap>
	
	<!-- 강의 기본 정보 DTO -->	
	<resultMap id="classBasicInfoResultMap" type="ClassBasicInfoDTO">
		<id column="CLASS_CODE" property="code"/>
		<result column="CLASS_NAME" property="name"/>
		<result column="SUBJECT_NO" property="subjectNo"/>
	</resultMap>
	
	<!-- 학교 정보 DTO -->	
	<resultMap id="schoolResultMap" type="SchoolDTO">
		<result column="SCHOOL" property="school"/>
	</resultMap>
	
	<!-- 퇴원생 목록 조회용 DTO -->
	<resultMap id="studentQuitListResultMap" type="StudentQuitListDTO">
		<id column="STUDENT_NO" property="no"/>
		<result column="STUDENT_NAME" property="name"/>
		<result column="SCHOOL" property="school"/>
		<result column="GRADE_NAME" property="grade"/>
		<result column="STUDENT_PHONE" property="studentPhone"/>
		<result column="PARENTS_PHONE" property="parentsPhone"/>
		<result column="REGISTRATION_DATE" property="registrationDate"/>
		<result column="QUIT_DATE" property="quitDate"/>
		<result column="QUIT_REASON" property="quitReason"/>
		<result column="LENGTH_OF_STAY" property="lengthOfStay"/>
	</resultMap>	
	
	<!-- 학생 모든 정보 StudentFullInfoDTO -->
	<resultMap id="studentFullInfoResultMap" type="StudentFullInfoDTO">
		<id column="STUDENT_NO" property="no"/>
		<result column="STUDENT_NAME" property="studentName"/>
		<result column="STUDENT_PHONE" property="studentPhone"/>
		<result column="PARENTS_NAME" property="parentsName"/>
		<result column="PARENTS_PHONE" property="parentsPhone"/>
		<result column="GENDER" property="gender"/>
		<result column="SCHOOL" property="school"/>
		<result column="ADDRESS" property="address"/>
		<result column="BIRTH" property="birth"/>
		<result column="REGISTRATION_DATE" property="registrationDate"/>
		<result column="QUIT_DATE" property="quitDate"/>
		<result column="STATUS" property="status"/>
		<association resultMap="gradeResultMap" property="grade"/>
		<collection resultMap="studentClassInfoResultMap" property="classList"/>
	</resultMap>
	
	<!-- 학생 수강 정보 조회용 -->
	<resultMap id="studentClassInfoResultMap" type="StudentClassInfoDTO">
		<id column="CLASS_NO" property="classNo"/>
		<result column="CLASS_CODE" property="classCode"/>
		<result column="CLASS_NAME" property="className"/>
		<result column="SUBJECT_NO" property="subjectNo"/>
	</resultMap>
	
	
	<!-- 쿼리 -->
	<!-- 학생 등록 -->
	<insert id="insertStudent" parameterType="StudentDTO">
		INSERT
		  INTO TBL_STUDENT A
		(
		  A.STUDENT_NO
		, A.STUDENT_NAME
		, A.STUDENT_PHONE
		, A.PARENTS_NAME
		, A.PARENTS_PHONE
		, A.GENDER
		, A.SCHOOL
		, A.ADDRESS
		, A.BIRTH
		, A.REGISTRATION_DATE
		, A.GRADE_CODE
		)
		VALUES
		(
		  SEQ_STUDENT_NO.NEXTVAL
		, #{ studentName, jdbcType=VARCHAR }
		, #{ studentPhone, jdbcType=VARCHAR }
		, #{ parentsName, jdbcType=VARCHAR }
		, #{ parentsPhone, jdbcType=VARCHAR }
		, #{ gender, jdbcType=VARCHAR }
		, #{ school, jdbcType=VARCHAR }
		, #{ address, jdbcType=VARCHAR }
		, #{ birth, jdbcType=VARCHAR }
		, NVL(#{ registrationDate, jdbcType=DATE }, SYSDATE)
		, #{ gradeCode, jdbcType=VARCHAR }
		)
		<selectKey keyProperty="no" order="AFTER" resultType="_int">
			SELECT
			       SEQ_STUDENT_NO.CURRVAL
			  FROM DUAL
		</selectKey>
	</insert>
	
	<!-- 수강 정보 등록 -->
	<insert id="insertClassInfo" parameterType="ClassInfoDTO">
		INSERT
		  INTO TBL_CLASS_INFO A
		(
		  A.CLASS_NO
		, A.BEGIN_DATE
		, A.STUDENT_NO
		, A.CLASS_CODE
		)
		VALUES
		(
		  SEQ_CLASS_NO.NEXTVAL
		, #{ beginDate, jdbcType=DATE }
		, #{ studentNo }
		, #{ classCode }
		)
	</insert>
	
	<!-- 재원생 목록 조회(+페이징 처리) -->
	<select id="selectTotalCount" resultType="_int">
		SELECT
		       COUNT(A.STUDENT_NO)
		  FROM TBL_STUDENT A
		 WHERE A.STATUS = 'Y'
	</select>
	<select id="selectStudentRegistList" parameterType="PageInfoDTO" resultMap="studentRegistListResultMap">
		SELECT
	           A.RNUM	
		     , A.STUDENT_NO
		     , A.STUDENT_NAME
		     , A.SCHOOL
		     , A.GRADE_NAME
		     , A.STUDENT_PHONE
		     , A.PARENTS_PHONE
		     , A.REGISTRATION_DATE
		  FROM (SELECT ROWNUM RNUM
		             , V.STUDENT_NO
				     , V.STUDENT_NAME
				     , V.SCHOOL
				     , V.GRADE_NAME
				     , V.STUDENT_PHONE
				     , V.PARENTS_PHONE
				     , V.REGISTRATION_DATE
		          FROM V_STUDENT_Y_LIST V
		  	   ) A
		 WHERE A.RNUM BETWEEN #{ startRow } AND #{ endRow }
	</select>
	<select id="selectStudentClassList" parameterType="_int" resultMap="classBasicInfoResultMap">
		SELECT
		       B.CLASS_NAME
		     , B.SUBJECT_NO
		  FROM TBL_CLASS_INFO A
		  JOIN TBL_CLASS B ON (A.CLASS_CODE = B.CLASS_CODE)
		 WHERE A.STUDENT_NO = #{ studentNo }
		   AND A.STATUS = 'Y'
		 ORDER BY B.SUBJECT_NO
	</select>
	
	<!-- 검색용 재원생 학교 목록 조회 -->
	<select id="selectSchoolList" resultMap="schoolResultMap">
		SELECT
		       DISTINCT(A.SCHOOL)
		  FROM TBL_STUDENT A
		 WHERE A.STATUS = 'Y'
		   AND A.SCHOOL IS NOT NULL
	</select>
	
	<!-- 검색용 학년 목록 조회 -->
	<select id="selectGradeList" resultMap="gradeResultMap">
		SELECT
		       A.GRADE_CODE
		     , A.GRADE_NAME
		  FROM TBL_GRADE A
	</select>
	
	<!-- 검색용 강의 목록 조회 -->
	<select id="selectClassList" resultMap="classBasicInfoResultMap">
		SELECT
		       A.CLASS_CODE
		     , A.CLASS_NAME
		     , A.SUBJECT_NO
		  FROM TBL_CLASS A
	</select>
	
	<!-- 재원생 목록 검색 및 페이징 처리 -->
	<!-- 검색 결과 원생 수 조회 -->
	<select id="searchTotalCount" parameterType="StudentSearchCriteria" resultType="_int">
		SELECT
		       COUNT(V.STUDENT_NO)
		  FROM V_STUDENT_Y_LIST V
		<if test="classCode != 'all'">
		  JOIN TBL_CLASS_INFO A ON (V.STUDENT_NO = A.STUDENT_NO)
		</if>
		<where>
		  <if test="searchValue != null and searchValue != ''">
		      <if test="searchOption == 'parentsPhone'">
		           REPLACE(V.PARENTS_PHONE, '-', '') LIKE '%' || #{ searchValue } || '%'
		      </if>
		      <if test="searchOption == 'studentName'">
		       AND V.STUDENT_NAME LIKE '%' || #{ searchValue } || '%'
		      </if>
		      <if test="searchOption == 'studentPhone'">
		       AND REPLACE(V.STUDENT_PHONE, '-', '') LIKE '%' || #{ searchValue } || '%'
		      </if>
		  </if>
	      <if test="school != 'all'">
	       AND V.SCHOOL = #{ school }
	      </if>
	      <if test="gradeCode != 'all'">
	       AND V.GRADE_CODE = #{ gradeCode }
	      </if>
	      <if test="classCode != 'all'">
	       AND A.CLASS_CODE = #{ classCode }
	      </if>
	    </where>
	</select>	
	<!-- 원생 목록 검색 (페이징 처리) -->
	<select id="searchStudentRegistList" parameterType="StudentSearchCriteria" resultMap="studentRegistListResultMap">
		SELECT
	           A.RNUM	
		     , A.STUDENT_NO
		     , A.STUDENT_NAME
		     , A.SCHOOL
		     , A.GRADE_NAME
		     , A.STUDENT_PHONE
		     , A.PARENTS_PHONE
		     , A.REGISTRATION_DATE
		  FROM (SELECT ROWNUM RNUM
		             , V.STUDENT_NO
				     , V.STUDENT_NAME
				     , V.SCHOOL
				     , V.GRADE_NAME
				     , V.STUDENT_PHONE
				     , V.PARENTS_PHONE
				     , V.REGISTRATION_DATE
		          FROM V_STUDENT_Y_LIST V
				<if test="classCode != 'all'">
				  JOIN TBL_CLASS_INFO A ON (V.STUDENT_NO = A.STUDENT_NO)
				</if>
				<where>
				  <if test="searchValue != null and searchValue != ''">
				    <if test="searchOption == 'parentsPhone'">
				         REPLACE(V.PARENTS_PHONE, '-', '') LIKE '%' || #{ searchValue } || '%'
				    </if>
				    <if test="searchOption == 'studentName'">
				     AND V.STUDENT_NAME LIKE '%' || #{ searchValue } || '%'
				    </if>
				    <if test="searchOption == 'studentPhone'">
				     AND REPLACE(V.STUDENT_PHONE, '-', '') LIKE '%' || #{ searchValue } || '%'
				    </if>
				  </if>
			      <if test="school != 'all'">
			       AND V.SCHOOL = #{ school }
			      </if>
			      <if test="gradeCode != 'all'">
			       AND V.GRADE_CODE = #{ gradeCode }
			      </if>
			      <if test="classCode != 'all'">
			       AND A.CLASS_CODE = #{ classCode }
			      </if>
			    </where>
		  	   ) A
		 WHERE A.RNUM BETWEEN #{ pageInfo.startRow } AND #{ pageInfo.endRow }
	</select>
		
	<!-- 퇴원생 목록 조회 -->	
	<select id="selectQuitTotalCount" resultType="_int">
		SELECT
		       COUNT(A.STUDENT_NO)
		  FROM TBL_STUDENT A
		 WHERE A.STATUS = 'N'
	</select>
	<select id="selectStudentQuitList" parameterType="PageInfoDTO" resultMap="studentQuitListResultMap">
		SELECT
	           A.RNUM	
		     , A.STUDENT_NO
		     , A.STUDENT_NAME
		     , A.SCHOOL
		     , A.GRADE_NAME
		     , A.STUDENT_PHONE
		     , A.PARENTS_PHONE
		     , A.REGISTRATION_DATE
		     , A.QUIT_DATE
		     , A.QUIT_REASON
		     , A.LENGTH_OF_STAY
		  FROM (SELECT ROWNUM RNUM
		             , V.STUDENT_NO
				     , V.STUDENT_NAME
				     , V.SCHOOL
				     , V.GRADE_NAME
				     , V.STUDENT_PHONE
				     , V.PARENTS_PHONE
				     , V.REGISTRATION_DATE
				     , V.QUIT_DATE
				     , V.QUIT_REASON
				     , V.LENGTH_OF_STAY
		          FROM V_STUDENT_N_LIST V
		  	   ) A
		 WHERE A.RNUM BETWEEN #{ startRow } AND #{ endRow }
	</select>	
	
	<!-- 검색용 퇴원생 학교 목록 조회 -->
	<select id="selectQuitStudentSchoolList" resultMap="schoolResultMap">
		SELECT
		       DISTINCT(A.SCHOOL)
		  FROM TBL_STUDENT A
		 WHERE A.STATUS = 'N'
		   AND A.SCHOOL IS NOT NULL
	</select>


	<!-- 퇴원생 목록 검색 및 페이징 처리 -->
	<!-- 검색 결과 원생 수 조회 -->
	<select id="searchQuitTotalCount" parameterType="StudentSearchCriteria" resultType="_int">
		SELECT
		       COUNT(V.STUDENT_NO)
		  FROM V_STUDENT_N_LIST V
		<where>
		  <if test="searchValue != null and searchValue != ''">
		      <if test="searchOption == 'parentsPhone'">
		           REPLACE(V.PARENTS_PHONE, '-', '') LIKE '%' || #{ searchValue } || '%'
		      </if>
		      <if test="searchOption == 'studentName'">
		       AND V.STUDENT_NAME LIKE '%' || #{ searchValue } || '%'
		      </if>
		      <if test="searchOption == 'studentPhone'">
		       AND REPLACE(V.STUDENT_PHONE, '-', '') LIKE '%' || #{ searchValue } || '%'
		      </if>
		  </if>
	      <if test="school != 'all'">
	       AND V.SCHOOL = #{ school }
	      </if>
	      <if test="gradeCode != 'all'">
	       AND V.GRADE_CODE = #{ gradeCode }
	      </if>
	    </where>
	</select>	
	<!-- 원생 목록 검색 (페이징 처리) -->
	<select id="searchStudentQuitList" parameterType="StudentSearchCriteria" resultMap="studentQuitListResultMap">
		SELECT
	           A.RNUM	
		     , A.STUDENT_NO
		     , A.STUDENT_NAME
		     , A.SCHOOL
		     , A.GRADE_NAME
		     , A.STUDENT_PHONE
		     , A.PARENTS_PHONE
		     , A.REGISTRATION_DATE
		     , A.QUIT_DATE
		     , A.QUIT_REASON
		     , A.LENGTH_OF_STAY
		  FROM (SELECT ROWNUM RNUM
		             , V.STUDENT_NO
				     , V.STUDENT_NAME
				     , V.SCHOOL
				     , V.GRADE_NAME
				     , V.STUDENT_PHONE
				     , V.PARENTS_PHONE
				     , V.REGISTRATION_DATE
				     , V.QUIT_DATE
				     , V.QUIT_REASON
				     , V.LENGTH_OF_STAY
		          FROM V_STUDENT_N_LIST V
			<where>
			  <if test="searchValue != null and searchValue != ''">
			      <if test="searchOption == 'parentsPhone'">
			           REPLACE(V.PARENTS_PHONE, '-', '') LIKE '%' || #{ searchValue } || '%'
			      </if>
			      <if test="searchOption == 'studentName'">
			       AND V.STUDENT_NAME LIKE '%' || #{ searchValue } || '%'
			      </if>
			      <if test="searchOption == 'studentPhone'">
			       AND REPLACE(V.STUDENT_PHONE, '-', '') LIKE '%' || #{ searchValue } || '%'
			      </if>
			  </if>
		      <if test="school != 'all'">
		       AND V.SCHOOL = #{ school }
		      </if>
		      <if test="gradeCode != 'all'">
		       AND V.GRADE_CODE = #{ gradeCode }
		      </if>
		    </where>
		  	   ) A
		 WHERE A.RNUM BETWEEN #{ pageInfo.startRow } AND #{ pageInfo.endRow }
	</select>
	
	<select id="selectStudentFullInfo" parameterType="_int" resultMap="studentFullInfoResultMap">
		SELECT
			   A.STUDENT_NO
			 , A.STUDENT_NAME
			 , A.STUDENT_PHONE
			 , A.PARENTS_NAME
			 , A.PARENTS_PHONE
			 , A.GENDER
			 , A.SCHOOL
			 , A.ADDRESS
			 , A.BIRTH
			 , A.REGISTRATION_DATE
			 , A.QUIT_DATE
			 , A.STATUS
		     , B.GRADE_CODE
		     , B.GRADE_NAME
		     , C.CLASS_NO
		     , D.CLASS_CODE
		     , D.CLASS_NAME
		     , D.SUBJECT_NO
		  FROM TBL_STUDENT A
		  JOIN TBL_GRADE B ON (A.GRADE_CODE = B.GRADE_CODE)
		  JOIN TBL_CLASS_INFO C ON (A.STUDENT_NO = C.STUDENT_NO)
		  JOIN TBL_CLASS D ON (C.CLASS_CODE = D.CLASS_CODE)
		 WHERE C.STATUS = 'Y'
		   AND A.STUDENT_NO = #{ studentNo }
	</select>
	
	<update id="updateStudent" parameterType="StudentDTO">
		UPDATE TBL_STUDENT A
		   SET A.STUDENT_NAME = #{ studentName, jdbcType=VARCHAR }
		 	 , A.STUDENT_PHONE = #{ studentPhone, jdbcType=VARCHAR }
		 	 , A.PARENTS_NAME = #{ parentsName, jdbcType=VARCHAR }
		 	 , A.PARENTS_PHONE = #{ parentsPhone, jdbcType=VARCHAR }
		 	 , A.GENDER = #{ gender, jdbcType=VARCHAR }
		 	 , A.SCHOOL = #{ school, jdbcType=VARCHAR }
		 	 , A.ADDRESS = #{ address, jdbcType=VARCHAR }
		 	 , A.BIRTH = #{ birth, jdbcType=VARCHAR }
		 	 , A.GRADE_CODE = #{ gradeCode, jdbcType=VARCHAR }
	     WHERE A.STUDENT_NO = #{ no }
	</update>
	
	<update id="deleteClassInfo" parameterType="_int">
		UPDATE TBL_CLASS_INFO A
		   SET A.STATUS = 'N'
		 WHERE A.STUDENT_NO = #{ studentNo }
	</update>
	
	<update id="deleteStudent" parameterType="_int">
		UPDATE TBL_STUDENT A
		   SET A.STATUS = 'N'
		 WHERE A.STUDENT_NO = #{ studentNo }
	</update>
	
</mapper>